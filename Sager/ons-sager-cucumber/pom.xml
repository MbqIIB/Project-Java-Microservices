<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>ons-sager-parent</artifactId>
		<groupId>br.org.ons.sager.parent</groupId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../ons-sager-parent</relativePath>
	</parent>

	<groupId>br.org.ons.sager.cucumber</groupId>
	<artifactId>ons-sager-cucumber</artifactId>
	<packaging>jar</packaging>

	<name>ONS Sager Cucumber</name>

	<properties>
		<cucumber.version>1.2.4</cucumber.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<sonar-maven-plugin.version>3.0.2</sonar-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
		<!-- Sonar properties -->
<!-- 		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin> -->
<!-- 		<sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath> -->
<!-- 		<sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath> -->

<!-- 		<sonar.sources>${project.basedir}/src/main/</sonar.sources> -->
<!-- 		<sonar.failsafe.reportsPath>${project.testresult.directory}/failsafe-reports</sonar.failsafe.reportsPath> -->
<!-- 		<sonar.tests>${project.basedir}/src/test/</sonar.tests> -->
		<profile.load></profile.load>
		<mvnw.extension></mvnw.extension>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.53.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>2.53.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.webdriverextensions</groupId>
			<artifactId>webdriverextensions</artifactId>
			<version>2.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.sager</groupId>
			<artifactId>ons-sager-common</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.sager.instalacao</groupId>
			<artifactId>ons-sager-instalacao-aggregate</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.sager.read</groupId>
			<artifactId>ons-sager-read</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.sager.agendamento</groupId>
			<artifactId>ons-sager-agendamento</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.sager.parametrizacao</groupId>
			<artifactId>ons-sager-parametrizacao</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.platform</groupId>
			<artifactId>ons-platform</artifactId>
			<version>${ons.platform.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.platform.bus</groupId>
			<artifactId>ons-platform-bus-mock</artifactId>
			<version>${ons.platform.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>br.org.ons.portal</groupId>
			<artifactId>ons-portal</artifactId>
			<version>${ons.platform.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>clean verify</defaultGoal>
		<testResources>
			<testResource>
				<directory>src/test/features</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<excludeTransitive>true</excludeTransitive>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.webdriverextensions</groupId>
				<artifactId>webdriverextensions-maven-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<goals>
							<goal>install-drivers</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<drivers>
						<driver>
							<name>chromedriver</name>
							<version>2.25</version>
						</driver>
					</drivers>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes combine.self="override">
								<include>**/*Cucumber*.java</include>
							</includes>
							<testFailureIgnore combine.self="override">true</testFailureIgnore>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<argLine>-Djava.security.egd=file:/dev/./urandom -Xmx1024m</argLine>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
							<output>tcpserver</output>
							<address>localhost</address>
						</configuration>
					</execution>
					<execution>
						<id>dump-ons-sager-read</id>
						<goals>
							<goal>dump</goal>
						</goals>
						<configuration>
							<destFile>${project.basedir}/../ons-sager-read/target/test-results/coverage/jacoco/jacoco-it.exec</destFile>
							<address>localhost</address>
							<port>8184</port>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>dump-ons-sager-agendamento</id>
						<goals>
							<goal>dump</goal>
						</goals>
						<configuration>
							<destFile>${project.basedir}/../ons-sager-agendamento/target/test-results/coverage/jacoco/jacoco-it.exec</destFile>
							<address>localhost</address>
							<port>8187</port>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>dump-ons-sager-parametrizacao</id>
						<goals>
							<goal>dump</goal>
						</goals>
						<configuration>
							<destFile>${project.basedir}/../ons-sager-parametrizacao/target/test-results/coverage/jacoco/jacoco-it.exec</destFile>
							<address>localhost</address>
							<port>8188</port>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>dump-ons-sager-instalacao-aggregate</id>
						<goals>
							<goal>dump</goal>
						</goals>
						<configuration>
							<destFile>${project.basedir}/../ons-sager-instalacao-aggregate/target/test-results/coverage/jacoco/jacoco-it.exec</destFile>
							<address>localhost</address>
							<port>8186</port>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests is 
						created after integration tests have been run -->
					<execution>
						<id>generate-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
						<configuration>
							<dataFileIncludes>
								<dataFileInclude>target/test-results/coverage/jacoco/jacoco-it.exec</dataFileInclude>
							</dataFileIncludes>
							<outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.bazaarvoice.maven.plugins</groupId>
				<artifactId>process-exec-maven-plugin</artifactId>
				<version>0.8</version>
				<executions>
					<execution>
						<id>ons-platform</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-platform</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8081/onsplatform/v2/api-docs</healthcheckUrl>
							<waitAfterLaunch>120</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>${failsafeArgLine},port=8181</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-platform-${ons.platform.version}.war</argument>
								<argument>--spring.profiles.active=cucumber,swagger</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ons-platform-bus-mock</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-platform-bus-mock</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8079</healthcheckUrl>
							<waitAfterLaunch>120</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-platform-bus-mock-${ons.platform.version}.war</argument>
								<argument>--spring.profiles.active=cucumber</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ons-sager-read</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-sager-read</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8084/onssagerread/v2/api-docs</healthcheckUrl>
							<waitAfterLaunch>120</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>${failsafeArgLine},port=8184</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-sager-read-${project.version}.war</argument>
								<argument>--spring.profiles.active=cucumber,swagger</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ons-sager-agendamento</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-sager-agendamento</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8087/onssageragendamento/v2/api-docs</healthcheckUrl>
							<waitAfterLaunch>120</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>${failsafeArgLine},port=8187</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-sager-agendamento-${project.version}.war</argument>
								<argument>--spring.profiles.active=dev,swagger</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ons-sager-parametrizacao</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-sager-parametrizacao</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8088/onssagerparametrizacao/v2/api-docs</healthcheckUrl>
							<waitAfterLaunch>120</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>${failsafeArgLine},port=8188</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-sager-parametrizacao-${project.version}.war</argument>
								<argument>--spring.profiles.active=dev,swagger</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ons-sager-instalacao-aggregate</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-sager-instalacao-aggregate</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8086/onssagerinstalacaoaggregate/v2/api-docs</healthcheckUrl>
							<waitAfterLaunch>2400</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>${failsafeArgLine},port=8186</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-sager-instalacao-aggregate-${project.version}.war</argument>
								<argument>--spring.profiles.active=cucumber,swagger${profile.load}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ons-portal</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>ons-portal</name>
							<workingDir>${project.build.directory}/dependencies</workingDir>
							<waitForInterrupt>false</waitForInterrupt>
							<healthcheckUrl>http://localhost:8078/onsportal/v2/api-docs</healthcheckUrl>
							<waitAfterLaunch>120</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>-Dlogback.loglevel=OFF</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/dependencies/ons-portal-${ons.platform.version}.war</argument>
								<argument>--spring.profiles.active=cucumber,swagger</argument>
							</arguments>
						</configuration>
					</execution>
					<!--Stop all processes in reverse order -->
					<execution>
						<id>stop-all</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-all</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>load</id>
			<properties>
				<profile.load>,load</profile.load>
			</properties>
		</profile>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<mvnw.extension>.cmd</mvnw.extension>
			</properties>
		</profile>
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<mvnw.extension></mvnw.extension>
			</properties>
		</profile>
	</profiles>
</project>
